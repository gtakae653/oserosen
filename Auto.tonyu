"field strict";
$gameConfig={
    debug=true,
    player = 2,
    replay = false,
};
$kintetsu=true;

//---Main
$Screen.setBGColor("white");
$main=this;

var searching;

if($kintetsu==true){
    new KLines;
    update();
}else{
    new Lines;//路線と駅のデータ
    update();
}

new StationPlace;//各駅の座標のデータ
update();
new MapScroll{x:0,y:0,scale:1};

$boardPrepared = false;//全ての駅のボタンとノードの配置が完了したらtrue
var ready = true;//探索中はfalse
$searchPrepared = true;//検索ボタンが押されたらfalse
$hotSpring = false;//温泉駅が選択されたらtrue

var diceArray=[];
if($kintetsu==true){
    diceArray=[2,2,2,2,3,3,3,4,4,4,5,5];
}else{
    diceArray=[2,2,2,2,2,2,3,3,3,4,4,5];//ダイスの出目用の配列
}

var board = new Board{turn: 1, turnCount:1, ready: true,diceNum:dice(),owner:{}, gameConfig: $gameConfig};

new Label{x:0, y:10,align:"left",fillStyle:"Red", template:"描画範囲:bキー 拡大:aキー 標準:cキー 広域:dキー"};

var loading = new Label{x:50, y:450,fillStyle:"Black", template:"駅生成中..."};

$name2Button={};

var sta;
for(var i=0;i<$stationPlace.length;i++){//駅名を表示する
    sta = new SButton{left:$stationPlace[i].x,top:$stationPlace[i].y,width:40,height:30,text:$stationPlace[i].name.replace(/\(.*/,""),stext:$stationPlace[i].name,
    fillStyle:"white",layer=$mainLayer/*onClick: sButtonClicked*/};
    
    $name2Button[$stationPlace[i].name]=sta;
    if(i%10==0){
        update();
    }
}

$Boot.newLimit=10000;
update();
$name2Node={};
var stationPlace;
var nts=[];
for (stationPlace of $stationPlace) {
    $name2Node[stationPlace.name]=new Node{name:stationPlace.name, x:stationPlace.x, y:stationPlace.y, owner:0};
    nts.push(stationPlace.name);
}
$Boot.newLimit=1000;
update();

for(var stations,z in $stations){//,zはTonyuの仕様の関係で何か渡さなければいけない為
    if(stations.indexOf("point") > -1){
        $name2Node[stations]=new Node{name:stations,x:0,y:0};
    }
}


function sButtonClicked(b) {
    /*if (!board.ready) {
        return;
    }
    if(!$boardPrepared){
        return;
    }
    if(!$searchPrepared){
        return;
    }*/
    if(board.gameOver){
        print("This game is finished!");
        print("Thank you for playing!");
        return;
    }
    var nb=board.clicked(b);
    if (!nb.ready) {
        throw new Error("Not Ready(こんなはずでは……)");
        /*searching = new Label{x:50, y:450,fillStyle:"Black", template:"探索中..."};
        nb.onReady=function () {
            searching.die();
        };*/
    }

    
    if (nb.error) {
        //printの代わりにLabelを作って消えるようにする
        new PopupLabel{template:"ERROR",x:30,y:480};
        //エラーメッセージが表示される
    } else {
        board.die();
        board=nb;
        var log = new CreateFile{logStationName:board.getStation,logOwner:board.prev.turn};//通常プレイ時のログ取得
        if($gameConfig.replay == true){
            var tlog = new CreateTerritoryfile{rsta:$red,ysta:$yellow,gsta:$green,bsta:$blue};
        }
    }
    return nb;
}


loading.die();
$boardPrepared = true;//全ての駅のボタンとNodeの配置完了
print("Game Start (Auto)");

var stnames=Object.keys($name2Node);
var takenStations;
var allStations=$stationPlace.length;

var kouho=[];
while(takenStations != allStations) {
    while(true) {
        var ns=notTakenStations();
        if(ns.length==0) break;
        var stname=ns[rnd(ns.length)];
        if (stname.match(/point/)) continue;
        break;
    }
    takenStations=Object.keys(board.owner).length;
    print(stname);
    print(takenStations,allStations);
    var btn=$name2Button[stname];
    var nb=sButtonClicked(btn);
    //while(!nb.ready) update();
    //print(all().length);
    update();
    //自分の駅数がどれくらいあるかを数える(リストで保存するとか)
    //takenCount();
    
}

print("This game is finished!"+"\nFirstPlayer's station:"+takenCount());
$firstPlayer=false;
if(takenCount() > 145){
    $firstPlayer=true;
    new CreateFile{taken:takenCount()};
}



\takenCount(){
    var taken=0;
    var sn;
    for(sn of board.owner){
        if(board.owner[sn].owner==1){
            taken++;
        }
    }
    return taken;
}

\notTakenStations(){
    var taken_s;
    for(taken_s of board.owner){
        var index=nts.indexOf(taken_s);
        if(index>-1){
            nts.splice(index,1);
        }
    }
    return nts;
}

\colorCount() {
    // dummy
}
\dice(){
    // dummy(debug mode)
    return 3;
}