//$Screen.resize(1000,1000);
new Lines;//路線と駅のデータ
update();

new StationPlace;//各駅の座標のデータ
update();
new MapScroll;

$search = new Button{top:10,left:300,width:150,height:30,text:"路線の検索"};

$owner={};
$turn = 1;
$red=0;
$blue=0;

//何人で対戦するか入力させ、その人数に合わせて色の種類を用意しなければならない
//人数の上限を決めておく(８人とか)


for(i=0;i<$stationPlace.length;i++){//駅名を表示する
    sta = new Button{left:$stationPlace[i].x,top:$stationPlace[i].y,width:40,height:30,text:$stationPlace[i].name,
    layer=$mainLayer,onClick:clicked};
    update();
}

$name2Node={};
for (stationPlace of $stationPlace) {
    $name2Node[stationPlace.name]=new Node{name: stationPlace.name, x:stationPlace.x, y:stationPlace.y, owner:0};   
}

for(var stations,z in $stations){//,zはTonyuの仕様の関係で何か渡さなければいけない為
    if(stations.indexOf("point") > -1){
        $name2Node[stations]=new Node{name:stations,x:0,y:0};
    }
}
/*接続関係のテスト
//false
print ($name2Node["point錦糸町"].isConnected($name2Node["馬喰町"], "総武本線" ,"両国") );
print ($name2Node["point錦糸町"].isConnected($name2Node["両国"], "総武本線" ,"馬喰町") );
//true
print ($name2Node["point錦糸町"].isConnected($name2Node["馬喰町"], "総武本線" ,"錦糸町") );
print ($name2Node["point錦糸町"].isConnected($name2Node["両国"], "総武本線" ,"錦糸町") );
print ($name2Node["point錦糸町"].isConnected($name2Node["錦糸町"], "総武本線" ,"馬喰町") );
print ($name2Node["point錦糸町"].isConnected($name2Node["錦糸町"], "総武本線" ,"両国") );
*/
while(true) {
    for (n of all(Node)) {
        if (n.name.indexOf("point") < 0){
            continue;
        }
        
        var sx=0,sy=0;
        for (c of n.allConnected()) {
            sx+=c.x;
            sy+=c.y;
        }
        
        n.x=sx/n.allConnected().length;
        n.y=sy/n.allConnected().length;
        
        
    }
    
    update();
}

function clicked(b){
    if(! $owner[b.text]){//$ownerに押された駅が無かったら
        $owner[b.text]={name:b.text,owner:$turn};//その駅を$ownerに数値turnで追加する
        //colorCount($owner[b.text]);
        
        lines = $stations[b.text].lines;
        count = lines.length;
        for (line of lines){
            s=new Searcher{from:$name2Node[b.text],current:$name2Node[b.text],lineName:line,owner:$owner[b.text].owner, path:new Path,prev:current};
            s.on("result") \(paths) {
                count--;
                for (var path of paths) {
                    //pathの中身を全て色を変えて、pathを殺す
                    //print(path.toString());
                    
                    
                    for(node of path.nodes){
                        //print(node.prev);
                        if(!($owner[node.name]) || $owner[node.name].owner != $turn){
                            $owner[node.name] = {owner:$turn};
                        }
                        
                    }
                    
                    for (var b2 of all(Button)) {
                        if($owner[b2.text]){
                            if($owner[b2.text].owner==1){
                                b2.fillStyle=new Color(255,0,0);
                            }else if($owner[b2.text].owner==2){
                                b2.fillStyle=new Color(0,0,255);
                            }else{
                                print("????");
                            }
                        }
                    }
                    
                }
                if(count == 0){
                    if($turn == 1){
                        $turn = 2;
                    }else{
                        $turn = 1;
                    }
                    
                }
            };
            $from=null;
        }
        
        if($turn==1){
            b.fillStyle=new Color(255,0,0);
        }else{
            b.fillStyle=new Color(0,0,255);
        }
    }
    
    
}

function colorCount(s){//色別に数える
    $red=0;
    $blue=0;
    for(var s in $owner){
        if($owner[s].owner==1){
            $red++;
        }else{
            $blue++;
        }
    }
}

if($search && $search.clicked==1){
    $InputBox.open("路線名の入力");
}
/*
while文にして......
状態管理が必要(例：$searching = true/false)
Name = $InputBox.getText();
if ($InputBox.getStatus()==1 && $searching) {
    //OKが押されたら、getした路線名をindexOfに反映する？
}
*/
